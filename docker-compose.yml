version: "3.8"
services:
  auth:
    container_name: auth_app
    build:
      context: auth_app
      dockerfile: ./Dockerfile
      target: development
    volumes:
      - ./auth_app:/usr/src/app
      - ./auth_app/node_modules:/usr/src/app/node_modules
    command: npm run start:dev
    depends_on:
      - postgres_auth
      - rabbitmq
    ports:
      - '3009:3009'

  profiles:
    container_name: profiles_app
    build:
      context: profiles_app
      dockerfile: ./Dockerfile
      target: development
    volumes:
      - ./profiles_app:/usr/src/app
      - ./profiles_app/node_modules:/usr/src/app/node_modules
    command: npm run start:dev
    depends_on:
      - postgres_profiles
      - auth
      - rabbitmq
    ports:
      - '3010:3010'

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    volumes:
      - /var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - ./rabbitmq.env

  postgres_auth:
    container_name: postgres_auth
    image: postgres:latest
    hostname: postgres_auth
    env_file:
      - ./auth_app/postgres.env
    ports:
      - '5434:5432'
    # volumes:
    #   - ./auth_app/pgdata:/var/lib/postgresql/data


  postgres_profiles:
    container_name: postgres_profiles
    image: postgres:latest
    hostname: postgres_profiles
    env_file:
      - ./profiles_app/postgres.env
    ports:
      - '5435:5432'
    # volumes:
    #   - ./profiles_app/pgdata:/var/lib/postgresql/data
